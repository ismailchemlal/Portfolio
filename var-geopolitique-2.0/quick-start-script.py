"""
VaR G√©opolitique 2.0 - Script de D√©marrage Rapide
===================================================

Ce script permet de tester rapidement le mod√®le avec des param√®tres pr√©d√©finis.
Id√©al pour une premi√®re d√©monstration ou validation.

Auteur: CHEMLAL Ismail
"""

import sys
import os
from datetime import datetime

# Banni√®re ASCII
BANNER = """
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                                                                           ‚ïë
‚ïë   ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó                ‚ïë
‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó               ‚ïë
‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù    ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë               ‚ïë
‚ïë   ‚ïö‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë               ‚ïë
‚ïë    ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë    ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù               ‚ïë
‚ïë     ‚ïö‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù                ‚ïë
‚ïë                                                                           ‚ïë
‚ïë              G√âOPOLITIQUE 2.0 - Quick Start Demo                         ‚ïë
‚ïë         Mod√®le Pr√©dictif de Risques par Intelligence G√©opolitique        ‚ïë
‚ïë                                                                           ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
"""

def print_banner():
    """Affiche la banni√®re du projet"""
    print("\033[96m" + BANNER + "\033[0m")
    print(f"\nüìÖ Date d'ex√©cution: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print(f"üêç Python version: {sys.version.split()[0]}")
    print("="*79)

def check_dependencies():
    """V√©rifie que toutes les d√©pendances sont install√©es"""
    print("\nüîç V√©rification des d√©pendances...")
    
    required_packages = {
        'numpy': 'numpy',
        'pandas': 'pandas',
        'yfinance': 'yfinance',
        'scipy': 'scipy',
        'matplotlib': 'matplotlib'
    }
    
    missing = []
    installed = []
    
    for display_name, package_name in required_packages.items():
        try:
            __import__(package_name)
            installed.append(display_name)
            print(f"  ‚úì {display_name}")
        except ImportError:
            missing.append(package_name)
            print(f"  ‚úó {display_name}")
    
    if missing:
        print("\n‚ö†Ô∏è  Packages manquants d√©tect√©s!")
        print(f"   Ex√©cutez: pip install {' '.join(missing)}")
        print("\n   Ou installez tout via: pip install -r requirements.txt")
        return False
    
    print(f"\n‚úÖ Toutes les d√©pendances sont install√©es ({len(installed)}/{len(required_packages)})")
    return True

def interactive_menu():
    """Menu interactif pour choisir le mode d'ex√©cution"""
    print("\n" + "="*79)
    print("üìã MENU PRINCIPAL")
    print("="*79)
    print("\nüéØ Choisissez un mode d'ex√©cution:\n")
    print("  1. üöÄ Demo Rapide (S&P 500, 3 ans)")
    print("  2. üìä Analyse Compl√®te (S&P 500, 5 ans)")
    print("  3. üåç Multi-Indices (US, EU, Asia)")
    print("  4. ‚öôÔ∏è  Mode Personnalis√©")
    print("  5. üìñ Afficher la Documentation")
    print("  6. ‚ùå Quitter")
    
    while True:
        try:
            choice = input("\nüëâ Votre choix (1-6): ").strip()
            if choice in ['1', '2', '3', '4', '5', '6']:
                return choice
            else:
                print("‚ö†Ô∏è  Choix invalide. Veuillez entrer un nombre entre 1 et 6.")
        except KeyboardInterrupt:
            print("\n\nüëã Interruption d√©tect√©e. Au revoir!")
            sys.exit(0)

def run_quick_demo():
    """Mode 1: D√©monstration rapide"""
    print("\n" + "="*79)
    print("üöÄ MODE: DEMO RAPIDE")
    print("="*79)
    print("\nConfiguration:")
    print("  ‚Ä¢ Indice: S&P 500 (^GSPC)")
    print("  ‚Ä¢ P√©riode: 3 ans")
    print("  ‚Ä¢ Niveau de confiance: 95%")
    print("\n‚è≥ D√©marrage de l'analyse...\n")
    
    try:
        from geopolitical_var_model import GeopoliticalVaRModel
        
        model = GeopoliticalVaRModel(confidence_level=0.95, window=252)
        results = model.run_complete_analysis(ticker='^GSPC', years=3)
        
        print("\n" + "="*79)
        print("‚ú® R√âSUM√â DES R√âSULTATS")
        print("="*79)
        
        improvement = results['improvement']
        n_obs = results['results_geopolitical']['n_observations']
        
        print(f"\nüìä Donn√©es analys√©es: {n_obs} jours de trading")
        print(f"üéØ Am√©lioration du mod√®le: {improvement:.1f}%")
        print(f"‚úÖ Test de Kupiec: {results['results_geopolitical']['kupiec_result']}")
        
        print("\nüí° Recommandation:")
        if improvement > 20:
            print("   Le mod√®le g√©opolitique apporte une am√©lioration SIGNIFICATIVE!")
        elif improvement > 10:
            print("   Le mod√®le g√©opolitique am√©liore mod√©r√©ment les pr√©visions.")
        else:
            print("   Les deux mod√®les ont des performances comparables.")
        
        return True
        
    except ImportError:
        print("\n‚ùå ERREUR: geopolitical_var_model.py non trouv√©!")
        print("   Assurez-vous que le fichier est dans le m√™me r√©pertoire.")
        return False
    except Exception as e:
        print(f"\n‚ùå ERREUR lors de l'ex√©cution: {str(e)}")
        return False

def run_full_analysis():
    """Mode 2: Analyse compl√®te"""
    print("\n" + "="*79)
    print("üìä MODE: ANALYSE COMPL√àTE")
    print("="*79)
    print("\nConfiguration:")
    print("  ‚Ä¢ Indice: S&P 500 (^GSPC)")
    print("  ‚Ä¢ P√©riode: 5 ans")
    print("  ‚Ä¢ Niveau de confiance: 95%")
    print("  ‚Ä¢ Exports: CSV + Graphiques")
    print("\n‚è≥ D√©marrage de l'analyse compl√®te (cela peut prendre 1-2 minutes)...\n")
    
    try:
        from geopolitical_var_model import GeopoliticalVaRModel
        
        model = GeopoliticalVaRModel(confidence_level=0.95, window=252)
        results = model.run_complete_analysis(ticker='^GSPC', years=5)
        
        # V√©rifier les fichiers export√©s
        print("\nüìÅ Fichiers g√©n√©r√©s:")
        if os.path.exists('var_geopolitical_results.csv'):
            print("  ‚úì var_geopolitical_results.csv")
        if os.path.exists('var_geopolitical_analysis.png'):
            print("  ‚úì var_geopolitical_analysis.png")
        
        print("\nüíæ Utilisez ces fichiers pour des analyses suppl√©mentaires!")
        return True
        
    except Exception as e:
        print(f"\n‚ùå ERREUR: {str(e)}")
        return False

def run_multi_indices():
    """Mode 3: Analyse multi-indices"""
    print("\n" + "="*79)
    print("üåç MODE: ANALYSE MULTI-INDICES")
    print("="*79)
    
    indices = {
        'S&P 500 (US)': '^GSPC',
        'EUROSTOXX 50 (EU)': '^STOXX50E',
        'Nikkei 225 (Japan)': '^N225'
    }
    
    print("\nIndices √† analyser:")
    for name in indices.keys():
        print(f"  ‚Ä¢ {name}")
    
    print("\n‚è≥ D√©marrage des analyses (cela peut prendre 3-5 minutes)...\n")
    
    try:
        from geopolitical_var_model import GeopoliticalVaRModel
        
        results_all = {}
        
        for name, ticker in indices.items():
            print(f"\nüìä Analyse: {name}")
            print("-" * 79)
            
            model = GeopoliticalVaRModel(confidence_level=0.95, window=252)
            results_all[name] = model.run_complete_analysis(ticker=ticker, years=3)
        
        # R√©sum√© comparatif
        print("\n" + "="*79)
        print("üìä COMPARAISON MULTI-INDICES")
        print("="*79)
        print(f"\n{'Indice':<20} {'Am√©lioration':<15} {'Test Kupiec':<15}")
        print("-" * 79)
        
        for name in indices.keys():
            improvement = results_all[name]['improvement']
            kupiec = results_all[name]['results_geopolitical']['kupiec_result']
            print(f"{name:<20} {improvement:>6.1f}%{'':<8} {kupiec:<15}")
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå ERREUR: {str(e)}")
        return False

def run_custom_mode():
    """Mode 4: Configuration personnalis√©e"""
    print("\n" + "="*79)
    print("‚öôÔ∏è  MODE: PERSONNALIS√â")
    print("="*79)
    
    try:
        # Saisie du ticker
        print("\nüìà Quel indice souhaitez-vous analyser?")
        print("   Exemples: ^GSPC (S&P 500), ^STOXX50E (EuroStoxx), ^N225 (Nikkei)")
        ticker = input("   Ticker: ").strip().upper()
        if not ticker:
            ticker = '^GSPC'
            print(f"   ‚Üí Utilisation de la valeur par d√©faut: {ticker}")
        
        # Saisie de la p√©riode
        print("\nüìÖ Nombre d'ann√©es d'historique?")
        years_input = input("   Ann√©es (1-10, d√©faut=5): ").strip()
        years = int(years_input) if years_input.isdigit() and 1 <= int(years_input) <= 10 else 5
        print(f"   ‚Üí P√©riode s√©lectionn√©e: {years} ans")
        
        # Saisie du niveau de confiance
        print("\nüéØ Niveau de confiance pour la VaR?")
        conf_input = input("   Confiance (90, 95, 99, d√©faut=95): ").strip()
        if conf_input in ['90', '95', '99']:
            confidence = int(conf_input) / 100
        else:
            confidence = 0.95
        print(f"   ‚Üí Niveau de confiance: {confidence*100:.0f}%")
        
        # Confirmation
        print("\n" + "-"*79)
        print("‚úÖ Configuration:")
        print(f"   ‚Ä¢ Ticker: {ticker}")
        print(f"   ‚Ä¢ P√©riode: {years} ans")
        print(f"   ‚Ä¢ Confiance: {confidence*100:.0f}%")
        print("-"*79)
        
        confirm = input("\n‚ñ∂Ô∏è  Lancer l'analyse? (O/n): ").strip().lower()
        if confirm == 'n':
            print("‚ùå Analyse annul√©e.")
            return False
        
        print("\n‚è≥ D√©marrage de l'analyse personnalis√©e...\n")
        
        from geopolitical_var_model import GeopoliticalVaRModel
        
        model = GeopoliticalVaRModel(confidence_level=confidence, window=252)
        results = model.run_complete_analysis(ticker=ticker, years=years)
        
        print("\n‚úÖ Analyse personnalis√©e termin√©e avec succ√®s!")
        return True
        
    except ValueError:
        print("\n‚ùå ERREUR: Valeur invalide saisie.")
        return False
    except Exception as e:
        print(f"\n‚ùå ERREUR: {str(e)}")
        return False

def show_documentation():
    """Mode 5: Afficher la documentation"""
    print("\n" + "="*79)
    print("üìñ DOCUMENTATION RAPIDE")
    print("="*79)
    
    doc = """
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë QU'EST-CE QUE LA VaR (VALUE-AT-RISK) ?                                   ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë La VaR est une mesure statistique qui estime la perte maximale probable  ‚ïë
‚ïë d'un portefeuille sur une p√©riode donn√©e avec un niveau de confiance     ‚ïë
‚ïë sp√©cifique.                                                               ‚ïë
‚ïë                                                                           ‚ïë
‚ïë Exemple: VaR 95% = 2.5%                                                  ‚ïë
‚ïë ‚Üí Il y a 5% de chance de perdre plus de 2.5% du capital.                ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë POURQUOI UN MOD√àLE G√âOPOLITIQUE ?                                        ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë Les mod√®les VaR traditionnels √©chouent lors de crises g√©opolitiques car: ‚ïë
‚ïë                                                                           ‚ïë
‚ïë  ‚ùå Ils supposent la stabilit√© des param√®tres                            ‚ïë
‚ïë  ‚ùå Ils ignorent les signaux d'alerte pr√©coce                            ‚ïë
‚ïë  ‚ùå Ils sous-estiment les √©v√©nements extr√™mes                            ‚ïë
‚ïë                                                                           ‚ïë
‚ïë Notre mod√®le int√®gre:                                                     ‚ïë
‚ïë  ‚úÖ GPR Index (tensions g√©opolitiques)                                   ‚ïë
‚ïë  ‚úÖ R√©gimes de march√© dynamiques                                         ‚ïë
‚ïë  ‚úÖ Adaptation temps r√©el aux crises                                     ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë FICHIERS G√âN√âR√âS                                                          ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë  üìÑ var_geopolitical_results.csv                                         ‚ïë
‚ïë     ‚Üí Donn√©es compl√®tes: prix, rendements, VaR, r√©gimes                  ‚ïë
‚ïë                                                                           ‚ïë
‚ïë  üìä var_geopolitical_analysis.png                                        ‚ïë
‚ïë     ‚Üí Graphiques: GPR, VaR comparison, r√©gimes, performance              ‚ïë
‚ïë                                                                           ‚ïë
‚ïë  üìà backtest_metrics.csv (si g√©n√©r√©)                                     ‚ïë
‚ïë     ‚Üí M√©triques d√©taill√©es des deux mod√®les                              ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë INTERPR√âTATION DES R√âSULTATS                                             ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë Test de Kupiec:                                                           ‚ïë
‚ïë   ‚úÖ ACCEPT√â ‚Üí Le mod√®le est statistiquement valide                      ‚ïë
‚ïë   ‚ùå REJET√â  ‚Üí Taux de violation trop √©lev√©, mod√®le impr√©cis            ‚ïë
‚ïë                                                                           ‚ïë
‚ïë Am√©lioration:                                                             ‚ïë
‚ïë   > 20% ‚Üí Am√©lioration SIGNIFICATIVE                                     ‚ïë
‚ïë   10-20% ‚Üí Am√©lioration MOD√âR√âE                                          ‚ïë
‚ïë   < 10% ‚Üí Am√©lioration FAIBLE                                            ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

Pour plus d'informations, consultez README.md
    """
    
    print(doc)
    input("\nüìñ Appuyez sur Entr√©e pour revenir au menu...")

def main():
    """Point d'entr√©e principal"""
    print_banner()
    
    # V√©rification des d√©pendances
    if not check_dependencies():
        print("\n‚ùå Installation requise avant de continuer.")
        sys.exit(1)
    
    # Boucle principale du menu
    while True:
        choice = interactive_menu()
        
        if choice == '1':
            success = run_quick_demo()
            if success:
                print("\n‚úÖ Demo rapide termin√©e avec succ√®s!")
        
        elif choice == '2':
            success = run_full_analysis()
            if success:
                print("\n‚úÖ Analyse compl√®te termin√©e avec succ√®s!")
        
        elif choice == '3':
            success = run_multi_indices()
            if success:
                print("\n‚úÖ Analyse multi-indices termin√©e avec succ√®s!")
        
        elif choice == '4':
            run_custom_mode()
        
        elif choice == '5':
            show_documentation()
            continue  # Retour direct au menu
        
        elif choice == '6':
            print("\n" + "="*79)
            print("üëã Merci d'avoir utilis√© VaR G√©opolitique 2.0!")
            print("="*79)
            print("\nüìö Pour aller plus loin:")
            print("  ‚Ä¢ Consultez README.md pour la documentation compl√®te")
            print("  ‚Ä¢ Explorez var_geopolitique_analysis.ipynb pour l'analyse interactive")
            print("  ‚Ä¢ Visitez le repository GitHub pour les mises √† jour")
            print("\nüí° N'oubliez pas de ‚≠ê le projet si vous l'avez trouv√© utile!")
            print("\nüî¨ D√©velopp√© par CHEMLAL Ismail - 2025")
            print("="*79 + "\n")
            sys.exit(0)
        
        # Proposer de continuer ou quitter
        print("\n" + "-"*79)
        continue_choice = input("‚ñ∂Ô∏è  Voulez-vous effectuer une autre analyse? (O/n): ").strip().lower()
        if continue_choice == 'n':
            print("\nüëã Au revoir!")
            sys.exit(0)

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è  Programme interrompu par l'utilisateur.")
        print("üëã Au revoir!")
        sys.exit(0)
    except Exception as e:
        print(f"\n‚ùå ERREUR CRITIQUE: {str(e)}")
        print("\nüêõ Si le probl√®me persiste, veuillez:")
        print("  1. V√©rifier que toutes les d√©pendances sont install√©es")
        print("  2. Consulter la documentation dans README.md")
        print("  3. Ouvrir une issue sur GitHub avec le message d'erreur")
        sys.exit(1)